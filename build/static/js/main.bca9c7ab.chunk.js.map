{"version":3,"sources":["services/persons.js","App.js","index.js"],"names":["baseUrl","personsServ","getAll","axios","get","then","resp","data","addNew","newRecord","post","update","put","id","del","delete","Confirm","text","ok","cancel","console","log","style","color","background","fontSize","borderStyle","borderRadius","padding","marginBottom","onClick","Message","message","setMessage","time","setTimeout","Inp","val","onChange","htmlFor","value","Filter","filter","onFilterChange","target","PersonForm","newName","newNumber","onSubmit","onPersonChange","onNumberChange","type","Persons","personsToShow","toDel","map","person","name","number","App","props","useState","persons","setPersons","setNewName","setNewNumber","setFilter","confirmText","setConfirmText","confirmFunc","setConfirmFunc","useEffect","dat","delPerson1","catch","finally","toLowerCase","includes","event","preventDefault","every","concat","window","confirm","find","p","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.bca9c7ab.chunk.js","sourcesContent":["import axios from 'axios';\r\n//const baseUrl = 'http://localhost:3001/api/persons';\r\nconst baseUrl = '/api/persons';\r\n\r\nconst getAll = () => {\r\n    const req = axios.get(baseUrl);\r\n    return req.then( resp => resp.data  );\r\n}\r\n\r\nconst addNew = (newRecord) => {\r\n    const req = axios.post(baseUrl, newRecord);\r\n    return req.then ( resp => resp.data);\r\n}\r\n\r\nconst update = (newRecord) => {\r\n    const req = axios.put(`${baseUrl}/${newRecord.id}`, newRecord);\r\n    return req.then ( resp => resp.data );\r\n}\r\n\r\nconst del = (id) => {\r\n    const req = axios.delete(`${baseUrl}/${id}`);\r\n    return req.then (resp => resp.data);\r\n}\r\nconst personsServ = {getAll, addNew, update, del} \r\nexport default personsServ;\r\n","import React, { useState, useEffect } from 'react'\nimport personsServ from './services/persons'\nimport './App.css';\n\nconst Confirm = ({ text, ok, cancel }) => {\n    if (!text) return null;\n    console.log('ok=', ok);\n    const style = {\n        color: 'red',\n        background: 'lightgrey',\n        fontSize: 20,\n        borderStyle: 'solid',\n        borderRadius: 5,\n        padding: 10,\n        marginBottom: 10,\n    }\n    return (\n        <div style={style}>\n            {text} <button onClick={ok}>Ok</button>\n            <button onClick={cancel}>Cancel</button>\n        </div>\n    )\n}\n\nconst Message = ({ message, setMessage }) => {\n    const { text, color, time } = message;\n    if (text) {\n        const style = {\n            color: color,\n            background: 'lightgrey',\n            fontSize: 20,\n            borderStyle: 'solid',\n            borderRadius: 5,\n            padding: 10,\n            marginBottom: 10,\n        }\n        if (time) {\n            setTimeout(() => { setMessage({ text: '', color: 'gray', time: 0 }) }, time)\n        }\n        return (\n            <div style={style}>\n                {text}\n            </div>\n        )\n    }\n    return null;\n}\nconst Inp = ({ text, val, onChange, id }) => (\n    <p>\n        <label htmlFor={text}>{text}:</label>  <input value={val} onChange={onChange} id={text} />\n    </p>\n)\n\nconst Filter = ({ filter, onFilterChange }) => {\n    return (\n        <div>\n            <Inp text='Filter' val={filter} onChange={onFilterChange} />\n            <button onClick={() => onFilterChange({ target: { value: '' } })}>clear</button>\n        </div>\n    )\n}\n\nconst PersonForm = ({ newName, newNumber, onSubmit, onPersonChange, onNumberChange }) => {\n    return (\n        <form onSubmit={onSubmit}>\n            <Inp text='name' val={newName} onChange={onPersonChange} />\n            <Inp text='number' val={newNumber} onChange={onNumberChange} />\n            <div>\n                <button type=\"submit\" >add</button>\n            </div>\n        </form>\n    )\n}\nconst Persons = ({ personsToShow, toDel }) => {\n    return (\n        <ul>\n            {personsToShow.map(person =>\n                <li key={person.name}>\n                    {person.name} {person.number}\n                    <button onClick={() => toDel(person.id, person.name)}>del</button>\n                </li>)}\n        </ul>\n    )\n}\nconst App = (props) => {\n    const [persons, setPersons] = useState([]);\n    const [newName, setNewName] = useState('');\n    const [newNumber, setNewNumber] = useState('');\n    const [filter, setFilter] = useState('');\n    const [message, setMessage] = useState({ text: '', color: 'gray', time: 0 });\n    const [confirmText, setConfirmText] = useState('');\n    const [confirmFunc, setConfirmFunc] = useState(() => () => { });\n\n    const hook = () => { personsServ.getAll().then(dat => setPersons(dat)) }\n    useEffect(hook, [])\n\n    const addPerson = event => {\n        event.preventDefault();\n        if (!persons.every(person => person.name !== newName)) {\n            if (window.confirm(`${newName} is already added to phonebook, replace?`)) {\n                const person = { ...persons.find(person => person.name === newName), number: newNumber };\n                personsServ.update(person).then((person => {\n                    setPersons(persons.map(p => p.id === person.id ? person : p));\n                    setNewName('');\n                    setNewNumber('');\n\n                }));\n            }\n        } else {\n            const person = { name: newName, number: newNumber };\n            personsServ.addNew(person).then(person => {\n                setPersons(persons.concat(person));\n                setNewName('');\n                setNewNumber('');\n                setMessage({ text: `Added ${person.name}`, color: 'green', time: 5000 });\n            })\n        }\n    }\n    const delPerson = (id, name) => {\n        setConfirmFunc(() => () => { delPerson1(id, name); setConfirmText('') });\n        setConfirmText(`Delete ${name}?`);\n    }\n    const delPerson1 = (id, name) => {\n        personsServ.del(id)\n            .then(() =>\n                setMessage({\n                    text: `Information of ${name} has been removed from server`,\n                    color: 'green',\n                    time: 5000\n                })\n            )\n            .catch(() =>\n                setMessage({\n                    text: `Information of ${name} has alredy been removed from server`,\n                    color: 'red',\n                    time: 5000\n                })\n            )\n            .finally(() => personsServ.getAll().then(dat => setPersons(dat)))\n    }\n\n    const onPersonChange = event => setNewName(event.target.value);\n    const onNumberChange = event => setNewNumber(event.target.value);\n    const onFilterChange = event => setFilter(event.target.value.toLowerCase());\n    const personsToShow = filter === '' ? persons :\n        persons.filter(person => person.name.toLowerCase().includes(filter));\n\n    return (\n        <div>\n            <h2>Phonebook</h2>\n            <Confirm\n                text={confirmText}\n                ok={confirmFunc}\n                cancel={() => setConfirmText('')}\n            />\n            <Message\n                message={message}\n                setMessage={setMessage}\n            />\n            <Filter filter={filter} onFilterChange={onFilterChange} />\n            <hr />\n            <PersonForm\n                newName={newName}\n                newNumber={newNumber}\n                onSubmit={addPerson}\n                onPersonChange={onPersonChange}\n                onNumberChange={onNumberChange}\n            />\n            <hr />\n            <h2>Numbers: </h2>\n            <Persons personsToShow={personsToShow} toDel={delPerson} />\n        </div>\n    )\n}\n\nexport default App","import ReactDOM from 'react-dom'\nimport App from './App.js'\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n)"],"sourceRoot":""}